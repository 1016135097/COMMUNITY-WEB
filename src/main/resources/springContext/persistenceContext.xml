<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="true">

	<jpa:repositories
		base-package="com.jos.community.module.repository,com.jos.community.system.module.repository" />

	<bean id="defaultPersistenceUnitManager"
		class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="persistenceXmlLocation" value="classpath:persistence-spring.xml" />
		<property name="defaultDataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.jos.community.module.entity</value>
				<value>com.jos.community.system.module.entity</value>
			</list>
		</property>
	</bean>


	<bean id="mysqlJpaVendor"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="true" />
		<property name="generateDdl" value="true" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitManager" ref="defaultPersistenceUnitManager" />

		<property name="jpaVendorAdapter" ref="mysqlJpaVendor" />
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect">
			</bean>
		</property>

		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<prop key="hibernate.dialect">${db.dialect}</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />


	<beans profile="demo">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.demo.properties" />

		<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
			<property name="jndiName"> <value>jdbc/ESTAR_ONLINE</value> </property> </bean> -->

		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${db.driverClassName}" />
			<property name="url" value="${db.url}" />
			<property name="username" value="${db.username}" />
			<property name="password" value="${db.password}" />
			<property name="maxActive" value="8" />
			<property name="initialSize" value="3" />
			<property name="maxWait" value="15000" />
			<property name="maxIdle" value="3" />
			<property name="minIdle" value="3" />
			<property name="validationQuery">
				<value>${db.validationQuery}</value>
			</property>
			<property name="testOnBorrow">
				<value>true</value>
			</property>
		</bean>

		<!-- initial schema and data 
		<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL"> <jdbc:script location="classpath:sql/oracle/schema.sql" /> 
		<jdbc:script location="classpath:sql/oracle/import-data.sql" encoding="UTF-8"/> 
		</jdbc:initialize-database> 
		-->
	</beans>


	<beans profile="test">
		<context:property-placeholder
			ignore-resource-not-found="true" location="classpath*:/test.properties" />

		<!-- Spring Simple connection pool -->
		<bean id="dataSource"
			class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<property name="driverClass" value="${db.driverClassName}" />
			<property name="url" value="${db.url}" />
			<property name="username" value="${db.username}" />
			<property name="password" value="${db.password}" />
		</bean>

		<!-- initial schema and data <jdbc:initialize-database data-source="dataSource" 
			ignore-failures="ALL"> <jdbc:script location="classpath:sql/h2/schema.sql" 
			/> <jdbc:script location="classpath:sql/h2/import-data.sql" encoding="UTF-8"/> 
			</jdbc:initialize-database> -->
	</beans>


</beans>